0：使用“jfinal-3.3.sources.jar”设置全局拦截器AOP（处理所有以WithCommit字段结束的方法，主要用于缓存和数据库的提交）。
1：使用“jfinal-3.3-sources.jar”的PropKit类设置全局变量。
2：解析子服。
3：初始化缓存中间变量（缓存数据存入最终缓存区的消息队列）。
4：初始化缓存数据（最终缓存区，Map和LRU缓存）。
5：加密算法。
6：使用“poi-3.10.1-sources.jar”加载配表信息。
7：初始化MyBatis工厂。
8：使用“ScriptRunner”类，执行需要启动前执行的sql语句。
9：ID生成器初始化：用于游戏的唯一Id（订单等）。
核心代码：(((long) (GSBoot.getServerId() & 0xFFFF)) << 48) | (System.currentTimeMillis() / 1000l & 0xFFFFFFFFl) << 16 | id.addAndGet(1) & 0x0000FFFF;
10：服务器数据初始化（开服时间等）。
11：生成机器人（竞技场等）。
12：初始化玩家数据（从数据库拉取所有player信息）。
13：修正数据（比如各种bug需要对数据库进行操作的）。
14：排行榜数据刷新和设置定时任务。
15：对玩家进行匹配库初始化（等级划分等）。
16：一些活动需要提前初始化的。
17：活动管理器初始化（活动的开启，刷新，关闭等）。
18：对后台接口初始化（通过注解的方式，用于服务器和玩家协议的匹配）。
19：对玩家的session进行检查和上报统计。
20：敏感词过滤初始化（DFA算法）。
21：对后台接口初始化（通过注解的方式，用于服务器和中心服协议的匹配），并开放服务器的端口（Netty框架的Socket服务启动，与Center连接）。
22：开放服务器的端口（Netty框架的Http服务启动，GM工具）；
23：开放服务器的端口（Netty框架的Websocket服务启动，与玩家的js代码通信）；

注解
1：加密：“commons-codec-1.10.sources.jar”的DigestUtils.md5Hex()方法。
2：大量的ThreadLock和ReentrantLock解决线程之间的并发问题。
3：“mybatis-3.3.1-sources.jar”，使用的mybatis包
4：“AtomicInteger”用于原子操作。（ID生成器）